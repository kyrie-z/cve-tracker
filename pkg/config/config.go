package config

import (
	"io/ioutil"
	"sync"

	yaml "gopkg.in/yaml.v2"
)

type Config struct {
	Server struct {
		Host string `yaml:"host"`
		Port int    `yaml:"port"`
	} `yaml:"server"`
	Mysql struct {
		User     string `yaml:"user"`
		Password string `yaml:"password"`
		Host     string `yaml:"host"`
		Port     int    `yaml:"port"`
		Dbname   string `yaml:"dbname"`
	} `yaml:"mysql"`
	LDAP struct {
		Host       string `yaml:"host"`
		Port       int    `yaml:"port"`
		Dn         string `yaml:"dn"`
		Password   string `yaml:"password"`
		UserSearch string `yaml:"user_search"`
	} `yaml:"ldap"`
}

type Mysql struct {
	User     string
	Password string
	Host     string
	Port     int
	Dbname   string
}

var (
	ConfigFilePath string
	once           sync.Once
)

func GetConfig(filename string) *Config {
	once.Do(func() {
		ConfigFilePath = filename
	})

	conf := new(Config)
	if content, err := ioutil.ReadFile(filename); err != nil {
		panic(err)
	} else {
		if err = yaml.Unmarshal(content, conf); err != nil {
			panic(err)
		}
	}
	return conf
}
