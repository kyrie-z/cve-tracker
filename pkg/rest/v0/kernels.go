package v0

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

//Query kernel CVE list
func queryKernelList(c *gin.Context) {
	product := c.Param("product")
	if len(product) == 0 {
		c.JSON(http.StatusBadRequest, gin.H{"error": "invalid product"})
		return
	}
	c.JSON(http.StatusOK, "test")

}

// Update kernle CVE information
func updateKernelCVE(c *gin.Context) {
	product := c.Param("product")
	if len(product) == 0 {
		c.JSON(http.StatusBadRequest, gin.H{"error": "invalid product"})
		return
	}
	c.JSON(http.StatusOK, "test")

}

// Synchronize upstream kernel CVE information
func syncKernelCVE(c *gin.Context) {
	product := c.Param("product")
	if len(product) == 0 {
		c.JSON(http.StatusBadRequest, gin.H{"error": "invalid product"})
		return
	}
	c.JSON(http.StatusOK, "test")

}
