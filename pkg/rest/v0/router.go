package v0

import (
	"github.com/gin-gonic/gin"
)

func Router(addr string) error {
	var eng = gin.Default()
	v0 := eng.Group("v0")
	session := v0.Group("/session")
	{
		session.POST("/login", login)     //curl -v -X POST http://127.0.0.1:10808/v0/session/login -H 'Content-Type:application/json' -d'{"account":"","password":""}'
		session.DELETE("/logout", logout) //curl -v -X DELETE http://127.0.0.1:10808/v0/session/logout  -H 'Authorization:'
	}
	cves := v0.Group("/cves")
	{
		cves.GET("/:product", queryCVEList)     //curl -X GET http://127.0.0.1:10808/v0/cves/v20?package=linu&status=unprocessed,fixed&count=3&debian_buster_status=open&score=5-4&sort=updated_at
		cves.PUT("/:product", updateCVE)        //curl -X PUT http://127.0.0.1:10808/v0/cves/v20 -H 'Content-Type:application/json' -d '{"cve":"CVE-2007-1614","package":"zziplib","status":"fixed"}'
		cves.GET("/:product/export", exportCVE) //curl -X GET http://127.0.0.1:10808/v0/cves/v20/export
	}

	tools := v0.Group("/tools")
	{
		tools.GET("/package/:product", queryPrepackageList)        //curl -X GET localhost:10808/v0/tools/package/v20
		tools.POST("/package/:product/:release", reloadPrepackage) //curl -X POST localhost:10808/v0/tools/package/v20/desktop -F 'pre-package=@./os'
		tools.POST("/binary/:product", reloadBinaryList)           //curl -X POST localhost:10808/v0/tools/binary/v20 -F 'binary=@./source-binary'
		tools.POST("/package/:product/maintainer", initMaintainer)
		tools.GET("/logs", queryLogList)
	}

	return eng.Run(addr)
}
